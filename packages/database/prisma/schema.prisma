generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProcedureCategory {
  id                String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sikka_practice_id Int
  sikka_category_id String
  category          String
  created_at        DateTime                  @default(now()) @db.Timestamptz
  updated_at        DateTime                  @default(now()) @db.Timestamptz @updatedAt
  mappings          ProcedureCategoryMapping[]
  procedure_codes   ProcedureCode[]

  @@unique([sikka_practice_id, category], name: "sikka_practice_id_category")
  @@index([sikka_practice_id])
  @@map("procedure_categories")
}

model ProcedureCategoryMapping {
  id                String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sikka_practice_id Int
  procedure_code    String
  category_id       String            @db.Uuid
  pms_category      String
  pms_description   String?
  created_at        DateTime          @default(now()) @db.Timestamptz
  updated_at        DateTime          @default(now()) @db.Timestamptz @updatedAt
  category          ProcedureCategory @relation(fields: [category_id], references: [id])
  history          ProcedureCategoryMappingHistory[]

  @@unique([sikka_practice_id, procedure_code], name: "unique_practice_procedure_mapping")
  @@index([sikka_practice_id], name: "idx_proc_cat_mapping_practice_id")
  @@index([procedure_code], name: "idx_proc_cat_mapping_procedure_code")
  @@index([category_id], name: "idx_proc_cat_mapping_category_id")
  @@index([pms_category], name: "idx_proc_cat_mapping_pms_category")
  @@map("procedure_category_mappings")
}

model ProcedureCategoryMappingHistory {
  id           String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  mapping_id   String                  @db.Uuid
  change_type  String
  previous_data Json?
  new_data     Json
  changed_by   String                  @db.Uuid
  changed_at   DateTime                @default(now()) @db.Timestamptz
  mapping      ProcedureCategoryMapping @relation(fields: [mapping_id], references: [id])

  @@index([mapping_id], name: "idx_proc_cat_mapping_history_mapping_id")
  @@index([changed_at], name: "idx_proc_cat_mapping_history_changed_at")
  @@map("procedure_category_mapping_history")
}

model ProcedureCode {
  id                                 String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sikka_practice_id                  Int
  sikka_cust_id                      Int
  procedure_code                     String
  description                        String
  abbreviation                       String
  category_id                        String?           @db.Uuid
  sikka_category_id                  String
  explosion_code                     String
  submit_to_insurance                Boolean
  allow_discount                     Boolean
  effect_on_patient_balance          String
  effect_on_provider_production      String
  effect_on_provider_collection      String
  procedure_type                     String
  is_active                         Boolean           @default(true)
  created_at                        DateTime          @default(now()) @db.Timestamptz
  updated_at                        DateTime          @default(now()) @db.Timestamptz
  category                          ProcedureCategory? @relation(fields: [category_id], references: [id])
  fee_schedules                     ProcedureFeeSchedule[]
  history                           ProcedureCodeHistory[]

  @@unique([sikka_practice_id, procedure_code], name: "sikka_practice_id_procedure_code")
  @@index([sikka_practice_id])
  @@index([procedure_code])
  @@index([category_id])
  @@index([procedure_type])
  @@index([is_active])
  @@map("procedure_codes")
}

model ProcedureCodeHistory {
  id               String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  procedure_code_id String       @db.Uuid
  change_type      String
  previous_data    Json?
  new_data         Json
  changed_by       String        @db.Uuid
  changed_at       DateTime      @default(now()) @db.Timestamptz
  procedure_code   ProcedureCode @relation(fields: [procedure_code_id], references: [id])

  @@index([procedure_code_id])
  @@index([changed_at])
  @@map("procedure_code_history")
}

model ProcedureFeeSchedule {
  id               String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  procedure_code_id String       @db.Uuid
  effective_date   DateTime      @db.Date
  end_date         DateTime?     @db.Date
  fee_amount       Decimal       @db.Decimal(10,2)
  created_at       DateTime      @default(now()) @db.Timestamptz
  updated_at       DateTime      @default(now()) @db.Timestamptz
  procedure_code   ProcedureCode @relation(fields: [procedure_code_id], references: [id])

  @@index([procedure_code_id])
  @@index([effective_date, end_date])
  @@map("procedure_fee_schedule")
}

model Patient {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  practice_id    String    @db.VarChar(20)
  firstName      String
  lastName       String
  dateOfBirth    DateTime  @db.Date
  insuranceId    String?   @db.Uuid
  medical_history Json?    @db.JsonB
  created_at     DateTime  @default(now()) @db.Timestamptz
  updated_at     DateTime  @default(now()) @db.Timestamptz @updatedAt

  @@unique([practice_id], name: "patients_practice_id_unique")
  @@index([practice_id], name: "patients_practice_id_idx")
  @@map("patients")
}