{"version":3,"file":"RetellService.js","sourceRoot":"","sources":["../../../src/services/retell/RetellService.ts"],"names":[],"mappings":"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","sourcesContent":["import WebSocket from 'ws';\r\nimport { RetellConfig, CallEventPayload, CallResponse, CallConfig } from './types';\r\n\r\nexport class RetellService {\r\n  private config: RetellConfig;\r\n  private ws: WebSocket | null = null;\r\n\r\n  constructor(config: RetellConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  async initiateCall(phoneNumber: string, config?: CallConfig): Promise<CallResponse> {\r\n    try {\r\n      const response = await fetch(`${this.config.baseUrl}/calls`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${this.config.apiKey}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          agent_id: this.config.agentId,\r\n          llm_id: this.config.llmId,\r\n          customer_number: phoneNumber,\r\n          recording_config: config?.recordingConfig,\r\n          llm_config: config?.llmConfig,\r\n          webhook_config: config?.webhookConfig || {\r\n            url: process.env.RETELL_WEBHOOK_URL,\r\n            events: ['call.started', 'call.ended', 'call.transcription']\r\n          }\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to initiate call: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error initiating call:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  connectWebSocket(callId: string, handlers: {\r\n    onTranscription?: (data: any) => void;\r\n    onCallEnded?: (data: any) => void;\r\n    onError?: (error: any) => void;\r\n  }): void {\r\n    try {\r\n      this.ws = new WebSocket(`${this.config.wsUrl}?call_id=${callId}`);\r\n\r\n      this.ws.on('open', () => {\r\n        console.log('WebSocket connection established for call:', callId);\r\n      });\r\n\r\n      this.ws.on('message', (data: string) => {\r\n        const event: CallEventPayload = JSON.parse(data);\r\n\r\n        switch (event.eventType) {\r\n          case 'call.transcription':\r\n            handlers.onTranscription?.(event.data);\r\n            break;\r\n          case 'call.ended':\r\n            handlers.onCallEnded?.(event.data);\r\n            this.ws?.close();\r\n            break;\r\n          default:\r\n            console.log(`Unhandled event type: ${event.eventType}`);\r\n        }\r\n      });\r\n\r\n      this.ws.on('error', (error) => {\r\n        console.error('WebSocket error:', error);\r\n        handlers.onError?.(error);\r\n      });\r\n\r\n      this.ws.on('close', () => {\r\n        console.log('WebSocket connection closed for call:', callId);\r\n      });\r\n    } catch (error) {\r\n      console.error('Error connecting to WebSocket:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getCallRecording(callId: string): Promise<Blob> {\r\n    try {\r\n      const response = await fetch(`${this.config.baseUrl}/calls/${callId}/recording`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${this.config.apiKey}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to get call recording: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.blob();\r\n    } catch (error) {\r\n      console.error('Error getting call recording:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateCallConfig(callId: string, config: CallConfig): Promise<void> {\r\n    try {\r\n      const response = await fetch(`${this.config.baseUrl}/calls/${callId}/config`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${this.config.apiKey}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(config),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to update call config: ${response.statusText}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating call config:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  disconnect(): void {\r\n    if (this.ws) {\r\n      this.ws.close();\r\n      this.ws = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const createRetellService = (config: RetellConfig): RetellService => {\r\n  return new RetellService(config);\r\n};"]}