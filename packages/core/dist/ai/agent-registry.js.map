{"version":3,"file":"agent-registry.js","sourceRoot":"","sources":["../../src/ai/agent-registry.ts"],"names":[],"mappings":"AAAA,OAAO,EAAe,iBAAiB,EAAE,MAAM,SAAS,CAAC;AAEzD,MAAM,OAAO,aAAa;IAIxB;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,MAAM,CAAC,WAAW;QAChB,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAC5B,aAAa,CAAC,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;QAC/C,CAAC;QACD,OAAO,aAAa,CAAC,QAAQ,CAAC;IAChC,CAAC;IAED,aAAa,CAAC,IAAY,EAAE,MAA4B;QACtD,MAAM,eAAe,GAAG,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACxD,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC7B,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,SAAS,IAAI,iBAAiB,CAAC,CAAC;QAClD,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,mBAAmB,CAAC,IAAY,EAAE,MAAmB;QAC3D,yDAAyD;QACzD,OAAO;YACL,IAAI;YACJ,MAAM;YACN,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC;SAClD,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { AgentConfig, AgentConfigSchema } from './types';\r\n\r\nexport class AgentRegistry {\r\n  private static instance: AgentRegistry;\r\n  private agents: Map<string, any>;\r\n\r\n  private constructor() {\r\n    this.agents = new Map();\r\n  }\r\n\r\n  static getInstance(): AgentRegistry {\r\n    if (!AgentRegistry.instance) {\r\n      AgentRegistry.instance = new AgentRegistry();\r\n    }\r\n    return AgentRegistry.instance;\r\n  }\r\n\r\n  registerAgent(name: string, config: Partial<AgentConfig>) {\r\n    const validatedConfig = AgentConfigSchema.parse(config);\r\n    const agent = this.createAgentInstance(name, validatedConfig);\r\n    this.agents.set(name, agent);\r\n    return agent;\r\n  }\r\n\r\n  getAgent(name: string) {\r\n    const agent = this.agents.get(name);\r\n    if (!agent) {\r\n      throw new Error(`Agent ${name} not registered`);\r\n    }\r\n    return agent;\r\n  }\r\n\r\n  private createAgentInstance(name: string, config: AgentConfig) {\r\n    // Implementation will vary based on actual agent classes\r\n    return {\r\n      name,\r\n      config,\r\n      process: () => Promise.resolve('Not implemented')\r\n    };\r\n  }\r\n}"]}