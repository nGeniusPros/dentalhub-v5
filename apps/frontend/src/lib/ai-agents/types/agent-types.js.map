{"version":3,"file":"agent-types.js","sourceRoot":"","sources":["agent-types.ts"],"names":[],"mappings":"","sourcesContent":["export type DentalAgentType =\n  | 'BRAIN_CONSULTANT'\n  | 'MARKETING_COACHING'\n  | 'DATA_RETRIEVAL'\n  | 'PROFITABILITY_APPOINTMENT'\n  | 'RECOMMENDATION'\n  | 'ANALYSIS'\n  | 'PATIENT_CARE'\n  | 'OPERATIONS'\n  | 'STAFF_TRAINING'\n  | 'LAB_CASE_MANAGER'\n  | 'PROCEDURE_CODE'\n  | 'SUPPLIES_MANAGER'\n  | 'MARKETING_ROI'\n  | 'HYGIENE_ANALYTICS'\n  | 'PATIENT_DEMOGRAPHICS'\n  | 'OSHA_COMPLIANCE'\n  | 'INSURANCE_VERIFICATION'\n  | 'DATA_ANALYSIS'\n  | 'REVENUE_HACK'\n  | 'STAFF_OPTIMIZATION';\n\nexport interface AIResponse {\n  content: string;\n  metadata?: Record<string, unknown>;\n  confidence?: number;\n  recommendations?: string[];\n  error?: {\n    code: string;\n    message: string;\n    retryable: boolean;\n  };\n}\n\nexport interface AgentConfig {\n  id: string;\n  assistantId: string;\n  model?: string;\n  temperature?: number;\n  maxTokens?: number;\n  rateLimit: {\n    rpm: number;  // Requests per minute\n    tpm: number;  // Tokens per minute\n  };\n  caching?: {\n    enabled: boolean;\n    ttl: number;  // Time to live in seconds\n  };\n  retryConfig?: {\n    maxRetries: number;\n    backoffFactor: number;\n    initialDelayMs: number;\n  };\n}\n\nexport interface AgentCapability {\n  name: string;\n  description: string;\n  confidence: number;  // 0-1 indicating how confident the agent is in this capability\n  parameters?: Record<string, unknown>;\n}\n\nexport interface AgentMetadata {\n  capabilities: AgentCapability[];\n  specializations: string[];\n  constraints: string[];\n  version: string;\n}\n"]}