{"version":3,"file":"documentService.js","sourceRoot":"","sources":["../../src/services/documentService.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  DocumentData,\r\n  DocumentGenerationOptions,\r\n  GeneratedDocument,\r\n  DocumentGenerationResult,\r\n  DocumentTemplate,\r\n  DocumentStorageOptions,\r\n} from '../types/document.types';\r\nimport { handleDocumentError } from '../edge-functions/documents/error';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport { TDocumentDefinitions } from 'pdfmake/interfaces';\r\nimport { promises as fs } from 'fs';\r\nimport path from 'path';\r\nimport { edgeCache } from '../utils/cache';\r\n\r\nasync function generatePdf(data: DocumentData, config: any): Promise<Buffer> {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      const docDefinition: TDocumentDefinitions = {\r\n        content: [\r\n          { text: `Document Type: ${data.type}`, style: 'header' },\r\n          { text: `Template ID: ${data.templateId}`, style: 'subheader' },\r\n          { text: `Data: ${JSON.stringify(data.data, null, 2)}`, style: 'body' },\r\n        ],\r\n        styles: {\r\n          header: { fontSize: 20, bold: true, margin: [0, 0, 0, 10] },\r\n          subheader: { fontSize: 16, bold: true, margin: [0, 0, 0, 5] },\r\n          body: { fontSize: 12, margin: [0, 0, 0, 5] },\r\n        }\r\n      };\r\n\r\n      const pdfDoc = pdfMake.createPdf(docDefinition);\r\n      pdfDoc.getBuffer((buffer) => {\r\n        resolve(buffer);\r\n      });\r\n    } catch (error) {\r\n      reject(handleDocumentError(error, 'PDF_GENERATION_FAILED'));\r\n    }\r\n  });\r\n}\r\n\r\nasync function generateDocx(data: DocumentData, config: any): Promise<Buffer> {\r\n  try {\r\n    const docxContent = `\r\n      <w:document xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\r\n        <w:body>\r\n          <w:p><w:r><w:t>Document Type: ${data.type}</w:t></w:r></w:p>\r\n          <w:p><w:r><w:t>Template ID: ${data.templateId}</w:t></w:r></w:p>\r\n          <w:p><w:r><w:t>Data: ${JSON.stringify(data.data, null, 2)}</w:t></w:r></w:p>\r\n        </w:body>\r\n      </w:document>\r\n    `;\r\n    return Buffer.from(docxContent, 'utf-8');\r\n  } catch (error) {\r\n    throw handleDocumentError(error, 'DOCX_GENERATION_FAILED');\r\n  }\r\n}\r\n\r\nasync function storeDocument(\r\n  buffer: Buffer,\r\n  options: DocumentStorageOptions\r\n): Promise<string> {\r\n  try {\r\n    const documentId = uuidv4();\r\n    const filePath = path.join(options.path, `${documentId}.${options.path.split('.').pop()}`);\r\n    await fs.writeFile(filePath, buffer);\r\n    return `file://${filePath}`;\r\n  } catch (error) {\r\n    throw handleDocumentError(error, 'DOCUMENT_STORAGE_FAILED');\r\n  }\r\n}\r\n\r\nfunction generateDocumentCacheKey(data: DocumentData, options: DocumentGenerationOptions): string {\r\n  const key = {\r\n    type: data.type,\r\n    templateId: data.templateId,\r\n    data: data.data,\r\n    format: options.config?.outputFormat || 'pdf',\r\n  };\r\n  return `document-${JSON.stringify(key)}`;\r\n}\r\n\r\nexport class DocumentService {\r\n  async generateDocument(\r\n    data: DocumentData,\r\n    options: DocumentGenerationOptions\r\n  ): Promise<DocumentGenerationResult> {\r\n    const cacheKey = generateDocumentCacheKey(data, options);\r\n    \r\n    return edgeCache.get(cacheKey, async () => {\r\n      try {\r\n        const documentId = uuidv4();\r\n        const config = options.config || {\r\n          outputFormat: 'pdf',\r\n          template: 'default',\r\n        };\r\n\r\n        let buffer: Buffer;\r\n        if (config.outputFormat === 'pdf') {\r\n          buffer = await generatePdf(data, config);\r\n        } else if (config.outputFormat === 'docx') {\r\n          buffer = await generateDocx(data, config);\r\n        } else {\r\n          throw handleDocumentError(\r\n            new Error(`Unsupported output format: ${config.outputFormat}`),\r\n            'UNSUPPORTED_FORMAT'\r\n          );\r\n        }\r\n\r\n        let url: string = '';\r\n        if (options.storage) {\r\n          url = await storeDocument(buffer, {\r\n            ...options.storage,\r\n            path: options.storage.path || 'documents',\r\n          });\r\n        }\r\n\r\n        const document: GeneratedDocument = {\r\n          documentId,\r\n          url,\r\n          type: data.type,\r\n          format: config.outputFormat,\r\n          size: buffer.length,\r\n          createdAt: new Date().toISOString(),\r\n          metadata: data.metadata,\r\n        };\r\n\r\n        return {\r\n          success: true,\r\n          document,\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          success: false,\r\n          error: handleDocumentError(error, 'DOCUMENT_GENERATION_FAILED'),\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  async getDocumentTemplate(templateId: string): Promise<DocumentTemplate> {\r\n    const cacheKey = `documentTemplate-${templateId}`;\r\n    return edgeCache.get(cacheKey, async () => {\r\n      try {\r\n        return {\r\n          id: templateId,\r\n          name: 'Default Template',\r\n          type: 'default',\r\n          version: '1.0',\r\n          content: '<h1>Default Template</h1>',\r\n          variables: ['patientName', 'appointmentDate'],\r\n          createdAt: new Date().toISOString(),\r\n          updatedAt: new Date().toISOString(),\r\n        };\r\n      } catch (error) {\r\n        throw handleDocumentError(error, 'TEMPLATE_RETRIEVAL_FAILED');\r\n      }\r\n    });\r\n  }\r\n}"]}